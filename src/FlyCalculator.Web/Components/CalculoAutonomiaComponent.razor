@using FlyCalculator.Web.Models

    <div class="form-group container">
        <h5>@title</h5>
        <div class="row">
            <div class="col-md-2">
                <label>Etapa</label>
            </div>
            <div class="col-md-5">
                <input type="datetime" @bind-value="model.Etapa.Tempo"
                       @oninput="e => CalculaTotaisTempo(e, model.Etapa)"/>
            </div>
            <div class="col-md-5">
                <input type="number" min="0" value="@model.Etapa.Litros" @oninput="e => CalculaTotaisLitros(e, model.Etapa)"/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <label>Alternado</label>
            </div>
            <div class="col-md-5">
                <input type="datetime"@bind-value="model.Alternado.Tempo"/>
            </div>
            <div class="col-md-5">
                <input type="number" value="@model.Alternado.Litros" @oninput="e => CalculaTotaisLitros(e, model.Alternado)"/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <label>Reserva</label>
            </div>
            <div class="col-md-5">
                <input type="datetime" @bind-value="model.Reserva.Tempo" />
            </div>
            <div class="col-md-5">
                <input type="number" value="@model.Reserva.Litros" @oninput="e => CalculaTotaisLitros(e, model.Reserva)"/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <label><b>Mínimo Requirido: </b></label>
            </div>
            <div class="col-md-5">
                <input type="datetime" @bind-value="model.MinimoRequirido.Tempo" />
            </div>
            <div class="col-md-5">
                <input type="number" value="@model.MinimoRequirido.Litros" disabled/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <label>Adicional</label>
            </div>
            <div class="col-md-5">
                <input type="datetime" @bind-value="model.Adicional.Tempo" />
            </div>
            <div class="col-md-5">
                <input type="number" value="@model.Adicional.Litros" @oninput="e => CalculaTotaisLitros(e, model.Adicional)"/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <label><b>Total a Bordo: </b></label>
            </div>
            <div class="col-md-5">
                <input type="datetime" @bind-value="model.Total.Tempo" />
            </div>
            <div class="col-md-5">
                <input type="number" value="@model.Total.Litros" disabled/>
            </div>
        </div>
    </div>

@code {
    private string title = "Cálculo de Autonomia";
    private CalculoAutonomia model = new CalculoAutonomia();

    private decimal EtapaLitros
    {
        get => model.Etapa.Litros;
        set
        {
            model.MinimoRequirido.Litros = (model.MinimoRequirido.Litros - model.Etapa.Litros) + value;
            model.Etapa.Litros = value;
        }
    }

    protected override void OnInitialized()
    {
    }

    private void CalculaTotaisLitros(ChangeEventArgs args, Autonomia autonomia)
    {
        model.MinimoRequirido.Litros = (model.MinimoRequirido.Litros - autonomia.Litros);
        model.Total.Litros = (model.Total.Litros - autonomia.Litros);

        if (decimal.TryParse(args.Value.ToString(), out decimal newValue))
        {
            model.MinimoRequirido.Litros += newValue;
            model.Total.Litros += newValue;
            autonomia.Litros = newValue;
        }
    }

    private void CalculaTotaisTempo(ChangeEventArgs args, Autonomia autonomia)
    {
        model.MinimoRequirido.Tempo = (model.MinimoRequirido.Tempo - autonomia.Tempo);
        model.Total.Tempo = (model.Total.Tempo - autonomia.Tempo);

        if (TimeSpan.TryParse(args.Value.ToString(), out TimeSpan newValue))
        {
            model.MinimoRequirido.Tempo += newValue;
            model.Total.Tempo += newValue;
            autonomia.Tempo = newValue;
        }
    }
}
